Revision history for DBIx::Class

    * Fixes
        - Fix on_connect_* not always firing in some cases - a race condition
          existed between storage accessor setters and the determine_driver
          routines, triggering a connection before the set-cycle is finished
        - Avoid unnecessary database hits when accessing prefetched related
          resultsets with no rows.

0.08270 2014-01-30 21:54 (PST)
    * Fixes
        - Fix 0.08260 regression in DBD::SQLite bound int handling. Inserted
          data was not affected, but any function <=> integer comparison would
          have failed (originally fixed way back in 0e773352)
        - Fix failure to load DateTime formatter when connecting to Firebird
          over ODBC

    * Misc
        - All drivers based on ::Storage::DBI::Firebird::Common now return the
          same sqlt_type value (affects ::DBI::Interbase, ::DBI::Firebird and
          ::DBI::ODBC::Firebird)

0.08260 2014-01-28 18:52 (UTC)
    * New Features
        - A new zero-to-DBIC style manual: DBIx::Class::Manual::QuickStart

    * Notable Changes and Deprecations
        - Explicitly deprecate combination of distinct and selecting a
          non-column via $rs->get_column()

    * Fixes
        - More robust handling of circular relationship declarations by loading
          foreign classes less frequently (should resolve issues like
          http://lists.scsys.co.uk/pipermail/dbix-class/2013-June/011374.html)
          Note that none of this is a manifestations of a DBIC bug, but rather
          unexpected (but correct) behavior of load-order-dependent (hence
          logically broken) Resultclass hierarchies. In order to deal with this
          DBIC is scaling back a large number of sanity checks, which are to be
          reintroduce pending a better framework for source registration
        - Fix multiple edge cases of complex prefetch combining incorrectly
          with correlated subquery selections
        - Fix multiple edge cases stemming from interaction of a non-selecting
          order_by specification and distinct and/or complex prefetch
        - Fix unbound growth of a resultset during repeated execute/exhaust
          cycles (GH#29)
        - Work around (and be very vocal about the fact) when DBIC encounters
          an exception object with broken string overloading
        - Clarify ambiguous behavior of distinct when used with ResultSetColumn
          i.e. $rs->search({}, { distinct => 1 })->get_column (...)
        - Setting quote_names propagates to SQL::Translator when producing
          SQLite DDL (it is one of the few producers *NOT* quoting by default)
        - Fix incorrect binding of large integers on old versions of
          DBD::SQLite (now DBIC simply always binds SQLite ints as BIGINT)
        - Silence (harmless) warnings on recent DBD::SQLite versions, when
          inserting/updating large integers on 32bit ivsize systems (RT#76395)
        - Back out self-cleaning from DBIx::Class::Carp for the time being
          (as a side effect fixes RT#86267)
        - Fix incorrect internal use of implicit list context in copy()
        - Fix 0.08250 regression in driver determination when DBI_DSN is used
        - Tests no longer fail if $ENV{DBI_DSN} is set
        - Throw clearer exception on ->new_related() with a non-existent
          relationship
        - Fix incorrect parethesis unroll with multicolumn in, (never noticed
          before fixing false positive in SQLA::Test 1.77)
        - Fix t/storage/replicated.t class loading problem
        - Stop using the deprecated Class::MOP::load_class()
        - Fix warning in t/54taint.t with explicitly unset PERL5LIB (RT#91972)
        - Fix t/54taint.t failing under a local::lib with installed earlier
          DBIC version (RT#92486)

    * Misc
        - Massive incompatible change of ::BlockRunner internals (was never
          documented as usable externally, this last set of changes settles
          the design for proper documentation and opening up)
        - Adjust exceptions in tests to accommodate changes in the upcoming
          DBD::SQLite based on libsqlite 3.8.2
        - More robust lock file naming scheme - allow tests to work on exotic
          MSWin32 filesystems (habitual offender being http://is.gd/iy5XVP)
        - Better diagnostics when File::Spec->tmpdir gives us crap in testing
        - Replace $row with $result in all docs to be consistent and to
          clarify various return values

0.08250 2013-04-29 22:00 (UTC)
    * New Features / Changes
        - Rewrite from scratch the result constructor codepath - many bugfixes
          and performance improvements (the current codebase is now capable of
          outperforming both DBIx::DataModel and Rose::DB::Object on some
          workloads). Some notable benefits:
          - Multiple has_many prefetch
          - Partial prefetch - you now can select only columns you are
            interested in, while preserving the collapse functionality
            (collapse is now exposed as a first-class API attribute)
          - Prefetch of resultsets with arbitrary order
            (RT#54949, RT#74024, RT#74584)
          - Prefetch no longer inserts right-side table order_by clauses
            (massively helps the deficient MySQL optimizer)
          - Prefetch with limit on right-side ordered resultsets now works
            correctly (via aggregated grouping)
          - No longer order the insides of a complex prefetch subquery,
            unless required to satisfy a limit
          - Stop erroneously considering order_by criteria from a join under
            distinct => 1 (the distinct should apply to the main source only)
        - Massively optimize codepath around ->cursor(), over 10x speedup
          on some iterating workloads.
        - Support standalone \[ $sql, $value ] in literal SQL with bind
          specifications: \[ '? + ?', 42, 69 ] is now equivalent to
          \[ '? + ?', [ {} => 42 ], [ {} => 69 ] ]
        - Changing the result_class of a ResultSet in progress is now
          explicitly forbidden. The behavior was undefined before, and
          would result in wildly differing outcomes depending on $rs
          attributes.
        - Deprecate returning of prefetched 'filter' rels as part of
          get_columns() and get_inflated_columns() data
        - Invoking get_inflated_columns() no longer fires get_columns() but
          instead retrieves data from individual non-inflatable columns via
          get_column()
        - Emit a warning on incorrect use of nullable columns within a
          primary key
        - Limited checks are performed on whether columns without declared
          is_nullable => 1 metadata do in fact sometimes fetch NULLs from
          the database (the check is currently very limited and is performed
          only on resultset collapse when the alternative is rather worse)

    * Fixes
        - Fix _dbi_attrs_for_bind() being called befor DBI has been loaded
          (regression in 0.08210)
        - Fix update/delete operations on resultsets *joining* the updated
          table failing on MySQL. Resolves oversights in the fixes for
          RT#81378 and RT#81897
        - Fix open cursors silently resetting when inherited across a fork
          or a thread
        - Properly support "MySQL-style" left-side group_by with prefetch
        - Fix $grouped_rs->get_column($col)->func($func) producing incorrect
          SQL (RT#81127)
        - Stop Sybase ASE storage from generating invalid SQL in subselects
          when a limit without offset is encountered
        - Even more robust behavior of GenericSubQuery limit dialect
        - Make sure deployment_statements() and cursor_class() are called on
          a resolved storage subclass

    * Misc
        - Fix tests failing due to unspecified resultset retrieval order
          (test suite now will pass with newest SQLite libs)

0.08210 2013-04-04 15:30 (UTC)
    * New Features / Changes
        - Officially deprecate the 'cols' and 'include_columns' resultset
          attributes
        - Remove ::Storage::DBI::sth() deprecated in 0.08191

    * Fixes
        - Work around a *critical* bug with potential for data loss in
          DBD::SQLite - RT#79576
        - Audit and correct potential bugs associated with braindead reuse
          of $1 on unsuccessful matches
        - Fix incorrect warning/exception originator reported by carp*() and
          throw_exception()

0.08209 2013-03-01 12:56 (UTC)
    * New Features / Changes
        - Debugging aid - warn on invalid result objects created by what
          seems like an invalid inheritance hierarchy

    * Fixes
        - Fix another embarrassing regression preventing correct refining of
          the search criteria on a prefetched relation (broken in 0.08205)
        - Fix incorrect callsite reporting by DBIC::Carp

0.08208 2013-02-20 09:56 (UTC)
    * New Features / Changes
        - A bunch of nonsensically named arguments to the SQL::Translator
          parser have been marked as deprecated (while still fully
          supported)

    * Fixes
        - Fix duplicated selected columns when calling 'count' when a same
          aggregate function is used more than once in a 'having' clause
          (RT#83305)
        - Prevent SQL::Translator::Producer::YAML from seeing the $dbh
          in a potentially connected $schema instance (RT#75394)

    * Misc
        - Fixup our distbuilding process to stop creating world-writable
          tarball contents (implicitly fixes RT#83084)
        - Added strict and warnings tests for all lib and test files

0.08206 2013-02-08
    * Fixes
        - Fix dbh_do() failing to properly reconnect (regression in 0.08205)
        - Extra sanity check of a fresh DBI handle ($dbh). Fixes
          connection coderefs returning garbage (seen in the wild)

    * Misc
        - Only allow known globals in SQL::Translator leak allowance
        - General cleanup of error message texts - quote names/identifiers
          for easier reading
        - Stop t/52leaks.t from failing when AUTOMATED_TESTING=1

0.08205 2013-01-22
    * New Features / Changes
        - The emulate_limit() arbitrary limit dialect emulation mechanism is
          now deprecated, and will be removed when DBIx::Class migrates to
          Data::Query
        - Support for the source_bind_attributes() storage method has been
          removed after a lengthy deprecation cycle
    * Fixes
        - When performing resultset update/delete only strip condition
          qualifiers - leave the source name alone (RT#80015, RT#78844)
        - Fix incorrect behavior on resultset update/delete invoked on
          composite resultsets (e.g. as_subselect_rs)
        - Fix update/delete operations referencing the updated table failing
          on MySQL, due to its refusal to modify a table being directly
          queried. As a workaround induce in-memory temp-table creation
          (RT#81378, RT#81897)
        - More robust behavior under heavily threaded environments - make
          sure we do not have refaddr reuse in the global storage registry
        - Fix failing test on 5.8 under Win32 (RT#81114)
        - Fix hash-randomization test issues (RT#81638)
        - Disallow erroneous calling of connect_info on a replicated storage
          (RT#78436)
    * Misc
        - Improve the populate docs in ::Schema and ::ResultSet
        - ::Storage::DBI::source_bind_attributes() removed as announced
          on Jan 2011 in 0e773352a

0.08204 2012-11-08
    * New Features / Changes
        - SQLMaker now accepts \'literal' with the 'for' rs attribute as an
          override to the builtin FOR options
    * Fixes
        - Fix unique constraint violations in Ordered.pm blanket movement
          (RT#79773, rolls back short-sighted 5e6fde33e)
        - Fix API mismatch between new_result() and new_related() (originally
          broken by fea3d045)
        - Fix test failure on perl 5.8
    * Misc
        - Much more extensive diagnostics when a new RDBMS/DSN combination is
          encountered (RT#80431)

0.08203 2012-10-18
    * Fixes
        - Really fix inadequate $dbh->ping SQLite implementation (what shipped
          in 0.08201 tickled other deficiencies in DBD::SQLite itself)

0.08202 2012-10-06
    * Fixes
        - Replace inadequate $dbh->ping SQLite implementation with our own,
          fixes RT#78420

0.08200 2012-08-24 (UTC)
    * Fixes
        - Change one of the new tests for the previous release to not require
          SQL::Translator

0.08199 2012-08-22 (UTC)
    * Fixes
        - Roll back incomplete (and broken) internal changes - restore prefetch functionality

0.08198 2012-07-11 03:43 (UTC)
    * Fixes
        - Fix a number of Win32 Test issues
        - Fix silent Oracle connection failures

0.08197 2012-07-10 10:32 (UTC)
    * New Features / Changes
        - Issue a warning when DateTime objects are passed to ->search
        - Fast populate() in void context is now even more efficient by
          going directly through execute_for_fetch bypassing execute_array
        - Fix update()/delete() on complex resultsets to no longer fall back
          to silly row-by-row deletion, construct a massive OR statement
          instead
        - Allow complex update/delete operations on sources without a
          primary key, as long as they have at least one non-nullable
          unique constraint
        - dbicadmin now better supports catalyst-style config files, by
          unrolling 'config_info' hashkeys
        - Multiple Improvements MSSQL over DBD::ADO
          - Transaction support
          - Support for VARCHAR(MAX)/VARBINARY(MAX)/NVARCHAR(MAX) datatypes
          - Nomalization of retrieved GUID values

    * Fixes
        - Fix complex has_many prefetch with resultsets not selecting identity
          columns from the root result source
        - Fix SkipFirst and FirstSkip limit dialects (Informix and Firebird)
        - Fix "Skimming limit" dialects (Top, FetchFirst) to properly check
          the order_by criteria for stability
        - Fix "Skimming limit" dialects (Top, FetchFirst) to propagate
          non-selected order criteria when part of a larger subquery
        - Fix RowNumberOver and all "skimming limits" to correctly assemble
          bind values when supplied for both select and order_by
        - Fix all subquery-based dialects to not lose a subquery fragment
          when we both select and order by the result of the same subquery
        - Fix the Sybase hubrid limit dialect (RowCountOrGenericSubQ) losing
          Group/Having/Order clauses when called without an offset (RT#73244)
        - No longer generate incorrect SQL on ->as_query called on resultsets
          with software_limit enabled
        - A number of corner case fixes of void context populate() with \[]
        - Fix corner case of forked children disconnecting the parents DBI
          handle
        - Improve identity/autoinc retrieval code in MSSQL and Sybase -
          should reduce weird side-effects especially with populate()
        - Explicitly disable DBD::ODBC batch operations (as of DBD::ODBC 1.35)
          for the following drivers too buggy to handle the optimized path:
          - FreeTDS ODBC driver (when used with MSSQL)
          - The Firebird ODBC driver
          - The MSAccess ODBC driver
        - Explicitly disable DBD::ODBC dynamic_cursors when using freetds 0.83
          or later - they made enough ODBC incompatible changes making it
          impossible to support sanely
        - Explicitly disable SCOPE_IDENTITY queries and statement caching for
          MSSQL on DBD::Sybase compiled against freetds 0.83 or later - way too
          buggy
        - Disable statement caching when using Sybase ASE and DBD::Sybase
          compiled against freetds 0.83 or later
        - Fix leakage of $schema on in-memory new_related() calls
        - Fix more cases of $schema leakage in SQLT::Parser::DBIC
        - Fix leakage of $storage in ::Storage::DBI::Oracle
        - Fix pessimization of Oracle RowNum limit dialect query when no
          offset has been specified
        - Remove useless vestigial pessimization in Ordered.pm for cases
          when the position column is part of a unique constraint
        - Fix dbicadmin to no longer ignore the documented 'config' option
        - The schema-resultsource entanglement is now much more robust
          under threads
        - Fix ::Schema::ddl_filename() failing miserably on paths containing
          certain numeric sequences
        - t/53lean_startup.t adjusted for new 5.15.x base.pm behavior

    * Misc
        - Centralized leak-checks for all instances of DBICTest::Schema
          from within any test
        - Now passes all tests with Test::Builder 1.005
        - Codebase is now trailing-whitespace-free
        - Cleanup of complex resultset update/delete oprations - storage
          specific code moved back to ResultSet and replaced by checks
          of storage capabilities
        - Fixed carp_once only emitting one single warning per package
          regardless of warning content
        - Test suite now can be safely executed in parallel (prove -jN
          or HARNESS_OPTIONS=jN)

0.08196 2011-11-29 05:35 (UTC)
    * Fixes
        - Fix tests for DBD::SQLite >= 1.34.
        - Fix test failures with DBICTEST_SQLITE_USE_FILE set
        - Fix the find() condition heuristics being invoked even when the
          call defaults to 'primary' (i.e. when invoked with bare values)
        - Throw much clearer error on incorrect inflation spec
        - Fix incorrect storage behavior when first call on a fresh schema
          is with_deferred_fk_checks
        - Fix incorrect dependency on Test::Simple/Builder (RT#72282)
        - Fix uninitialized warning in ::Storage::Sybase::ASE
        - Improve/cache  DBD-specific datatype bind checks (also solves a
          nasty memleak with version.pm on multiple ->VERSION invocations)
        - The internal carp module now correctly skips CAG frames when
          reporting a callsite
        - Fix test failures on perl < 5.8.7 and new Package::Stash::XS
        - Fix TxnScopeGuard not behaving correctly when $@ is set at the
          time of $guard instantiation
        - Fix the join/prefetch resolver when dealing with ''/undef/()
          relation specifications

    * Misc
        - No longer depend on Variable::Magic now that a pure-perl
          namespace::clean is available
        - Drop Oracle's Math::BigInt req down to 1.80 - no fixes concerning
          us were made since

0.08195 2011-07-27 16:20 (UTC)
    * Fixes
        - Fix horrible oversight in the Oracle sqlmaker when dealing with
          queries updating blobs (RT#69829)

0.08194 2011-07-20 16:10 (UTC)
    * Fixes
        - Fix $rs->populate([]) to be a no-op rather than an exception
        - Overhaul t/53lean_startup.t to better dodge false positives
        - Stop Data::Compare from loading random plugins
        - Oracle: Recalculate LOB bind indices for UPDATE with LOBs in WHERE
          (RT#69548)

0.08193 2011-07-14 17:00 (UTC)
    * New Features / Changes
        - Allow schema cloning to mutate attributes
        - DBIC now attempts more aggressive de-duplication of where
          conditions on resultset chaining
        - The Ordered component is now smarter wrt reordering of dirty
          objects, and does its job with less storage queries
        - Logging via DBIC_TRACE=1=<filename> no longer overwrites the
          logfile on every program startup, appending loglines instead

    * Fixes
        - Fix issue where the query was becoming overly mangled when trying
          to use pagination with a query that has a sub-select in the WHERE
          clause
        - Fix possible incorrect pagination on Oracle, when a resultset
          is not ordered by a unique column
        - Revert "Fix incorrect signature of the default sqlt_deploy_hook"
          from 0.08191 - documentation was in fact incorrect, not the code
        - Fix Sybase ASE IC::DateTime support (::Storage going out of sync
          with new default format expected by DateTime::Format::Sybase)
        - Fix a bug in update_all() resulting in the first row receiving a
          different dataset than the subsequent ones
        - Accomodate MSAccess supporting only 'INNER JOIN' (not plain 'JOIN')
        - InflateColumn::DateTime option datetime_undef_if_invalid no longer
          masks missing dependency exceptions (RT#66823)
        - Fix bug in Schema::Versioned failing to insert a schema version row
          during upgrades at the turn of the second
        - Fix incorrect bind of integers >= 2^^32 (bigint columns) to
          SQL_INTEGER, resulting in silent conversion to '-1'
        - Fix pre 5.10 failures of t/55namespaces_cleaned.t due to buggy
          require() (RT#68814)
        - Oracle autoinc inserts no longer leave open cursors behind

0.08192 2011-05-10 04:20 (UTC)
    * Fixes
        - Fix serious regression on SQLite, corrupting data when an alphanum
          value does not correspond to a stale numeric datatype in colinfo

0.08191 2011-05-02 00:45 (UTC) (deleted from CPAN)
    * New Features / Changes
        - Add quote_names connection option. When set to true automatically
          sets quote_char and name_sep appropriate for your RDBMS
        - Add retrieve_on_insert column info flag, allowing to retrieve any
          column value instead of just autoinc primary keys
        - Bring back strict ordering of selectors in complex search chains
          (an ill-fated attempt was made in 0.08127 to order intelligently)
        - All limit dialects (except for the older Top and FetchFirst) are
          now using bind parameters for the limits/offsets, making DBI's
          prepare_cached useful across paged resutsets
        - Support for savepoints for SQLite
        - Support for MS Access databases via DBD::ODBC and DBD::ADO (only
          Win32 support currently tested)
        - Support for the Firebird RDBMS over the new DBD::Firebird driver
        - IC::DateTime support for MSSQL over DBD::ADO
        - Both the ::ODBC and ::ADO dispatchers now warn if a rdbms-specific
          driver is not found for this connection before falling back to
          plain ::Storage::DBI
        - ::Storage::DBI::sth was mistakenly marked/documented as public,
          privatize and warn on deprecated use
        - Massive overhaul of bind values/attributes handling - slightly
          changes the output of as_query (should not cause compat issues)
        - Support ancient DB2 versions (5.4 and older), with proper limit
          dialect
        - Support sub-second precision for TIMESTAMPs for Firebird over ODBC
        - Support BLOBs and CLOBs in WHERE clauses for Oracle, including LIKE
          queries for CLOBs.

    * Fixes
        - Fix ::Storage::DBI::* MRO problems on 5.8.x perls
        - Disable mysql_auto_reconnect for MySQL - depending on the ENV
          it sometimes defaults to on and causes major borkage on older
          DBD::mysql versions
        - Fix dropped bind values in select/group_by on Oracle (omission
          from 0542ec57 and 4c2b30d6)
        - Fix remaining errors with Oracle and identifiers longer than the
          Oracle-imposed maximum of 30 characters (RT#66390)
        - Fix older oracle-specific "WhereJoins" to work properly with
          name quoting
        - Fix problems with M.A.D. under CGI::SpeedyCGI (RT#65131)
        - Reenable paging of cached resultsets - breakage erroneously added
          in 0.08127
        - Better error handling when prepare() fails silently
        - Fixes skipped lines when a comment is followed by a statement
          when deploying a schema via sql file
        - Fix reverse_relationship_info on prototypical result sources
          (sources not yet registered with a schema)
        - Warn and skip relationships missing from a partial schema during
          dbic cascade_delete
        - Automatically require the requested cursor class before use
          (RT#64795)
        - Work around a Firebird ODBC driver bug exposed by DBD::ODBC 1.29
        - Fix (to the extent allowed by the driver) transaction support in
          DBD::Sybase compiled against FreeTDS
        - Fix exiting via next warnings in ResultSource::sequence()
        - Fix stripping of table qualifiers in update/delete in arrayref
          condition elements
        - Change SQLMaker carp-monkeypatch to be compatible with versions
          of SQL::Abstract >= 1.73
        - Fix using \[] literals in the from resultset attribute
        - Fix populate() with \[], arrays (datatype) and other exotic values
        - Fix handling of rollbacks in nested transactions
        - Fix complex limits (RNO/RowNum/FetchFirst/Top/GenSubq) with
          sub-selects in the selectors list (correlated subqueries)
        - Fix inconsistency between $rs->next with and without HRI when all
          the "root" columns are in fact injected from the right rs side
        - Fix the join optimizer to correctly preserve the non-multi path to
          a multi relationship ( x -> might_have y -> has_many z )
        - Fix object-derived custom-relationship resultsets to resultsources
          with multilevel monikers (e.g. $schema->source('Foo::Bar') )
        - Fix incorrect signature of the default sqlt_deploy_hook - it now
          matches the documentation of passing in the result source object
        - Fix inadequate handling of internal storage methods within
          ::Storage::Replicated (RT#66295)

    * Misc
        - Rewire all warnings to a new Carp-like implementation internal
          to DBIx::Class, and remove the Carp::Clan dependency
        - Only load Class::C3 and friends if necessary ($] < 5.010)
        - Greatly reduced loading of non-essential modules to aid startup
          time (mainly benefiting CGI users)
        - Make sure all namespaces are clean of rogue imports
        - Dropped DBI req 2 years back - everything works with 1.57, no
          point requiring something newer

0.08190-TRIAL 2011-01-24 15:35 (UTC)

    * New Features / Changes
        - Support for completely arbitrary SQL::Abstract-based conditions
          in all types of relationships

0.08127 2011-01-19 16:40 (UTC)
    * New Features / Changes
        - Schema/resultsource instances are now crossreferenced via a new
          system guaranteeing leak-free mutually assured destruction
        - DBIx::Class now warns when the user erroneously supplies
          AutoCommit => 0 to connect()
        - A warning is also issued before forcing the RaiseError
          setting of externally supplied DBI handles
        - Switch to a warning when find() is invoked with both a 'key'
          argument and a NULL-containing condition to satisfy the named
          constraint. Previously (starting with 0.08124) an exception was
          thrown
        - Switch to a warning when a commit is attempted with an out-of-sync
          transaction_depth (someone issued a begin externally to DBIC).
          Previously (starting with 0.08124) an exception was thrown

    * Fixes
        - A number of improvements/diagnostics of multiple active resultset
          handling on MSSQL over DBD::ODBC
        - Revert default selection to being lazy again (eagerness introduced
          in 0.08125) - fixes DBIx::Class::Helper::ResultSet::RemoveColumns
        - Fix losing order of columns provided in select/as (regression from
          0.08125)
        - Unaliased "dark" selectors no longer throw off prefetch
        - Fix proper composition of bind values across all possible
          SQL areas ( group_by => \[ ... ] now works properly )
        - Allow populate to skip empty has_many relationships which makes
          it easier to pass HashRefInflator data directly to ->populate
        - Improve freeze/thaw semantics and error messages (RT#62546)
        - Fix inconsistency in Manual::Features (RT#64500)
        - Fix incorrect SQL when using for => 'shared' with MySQL (RT#64590)
        - Throw comprehensible exception on erroneous $schema->source()
          invocation
        - Fix sloppy refactor of ResultSource::sequence back from 89170201
          (RT#64839)
        - Fix incorrect error detection during populate() on Oracle
        - Better handling of result_source-less row objects by
          auto-calling result_source_instance when necessary
        - Fix reverse_relationship_info and sqlt deploy on partially
          loaded schemas (relationships point to non-existent sources)

    * Misc
        - Fix test warning on win32 - at this point the test suite is
          warning-free on all known OSes
        - Require newest namespace::clean which in turn depends on new
          installable Package::Stash

0.08126 2010-12-28 18:10 (UTC)
    * Fixes
        - Bump forgotten Class::Accessor::Grouped core dependency
        - Promote forgotten Hash::Merge optdep to a hard requirement
        - Skip t/storage/error.t on smokers with leaking perls
        - Fix t/storage/txn.t deadlocks on slower machines
        - Do not run on smokers if a trial Package::Stash is found

0.08125 2010-12-27 04:30 (UTC)
    * New Features / Changes
        - New method ResultSource columns_info method, returning multiple
          pairs of column name/info at once
        - $rs->search now throws when called in void context, as it makes
          no sense (and is nearly always a sign of a bug/misdesign)
        - Restore long-lost ability to supply unbalanced select/as pairs
          e.g. +select => \'DISTINCT(foo, bar)', +as => ['foo', 'bar']
        - +columns now behaves just like columns by not stripping a
          fully-qualified 'as' spec (i.e. foo.bar results in $obj->foo->bar)
        - Deprecate legacy $rs->search( %condition ) syntax (warn once per
          callsite)
        - NULL is now supplied unquoted to all debug-objects, in order to
          differentiate between a real NULL and the string 'NULL'
        - New search() condition operator -value used to pass complex bind
          values to DBI: search({ array_col => { -value => [1,2,3] }})
        - Add full INSERT...RETURNING support for Oracle
        - Deprecate use of -nest in search conditions (warn once per
          callsite)
        - Deprecate the completely useless DBIx::Class::Serialize::Storable
          result component

    * Fixes
        - Fixed read-only attribute set attempt in ::Storage::Replicated
          (RT#62642)
        - Fix incomplete logic while detecting correct Oracle sequence
          on insert
        - Fix detection of Oracle sequences for tables without an explicitly
          specified schema (RT#63493)
        - Major overhaul of Storage::Oracle to handle enabled quoting
        - Fixed incorrect composition of select/as/columns attributes during
          chaining (RT#61235)
        - Proper serialization of resultsets with open cursors
        - Refactor handling of RDBMS-side values during insert() - fix
          regression of inserts into a Postgres / ::Replicated combination
        - Missing dependency check in t/60core.t (RT#62635)
        - Fix regressions in IC::DT registration logic
        - Fix regression in select-associated bind value handling (RT#61025)
        - Simplify SQL generated by some LIMITed prefetching queries
        - Throw an exception when a required group_by on a complex prefetch
          can not be auto-constructed, instead of continuing to eventually
          produce invalid SQL
        - Fix infinite loops on old perls with a recent Try::Tiny
        - Improve "fork()" on Win32 by reimplementing a more robust DBIC
          thread support (still problematic, pending a DBI fix)
        - Properly quote table name on INSERT with no values
        - Work around possible Storage destruction warnings
        - Fix count of grouped resultsets using HAVING with aliases
        - Setting belongs_to columns/relationships no longer leaves the
          FK value and related object out of sync
        - Stop stripping newlines from SQL statements in the limit emulators
          as it is possible that custom sql with comments was provided
        - Add forgotten attributes to Admin.pm
        - Fix incorrect 'having' attribute documentation (RT#64129)
        - Improve fallback-to-master/return-to-slave reporting in
          ::Replicated::Balancer
        - Adjust txn_scope_guard code/tests to changes in $@ handling on
          recent blead (RT#64251)

    * Misc
        - Add extra option groups to DBIC::Optional::Depencencies, to aid
          users in requesting the prerequisites for a particular RDBMS
        - Switch all serialization to use Storable::nfreeze for portable
          architecture independent ice
        - Fix the bogus META.yml dependency injection issue for good
        - Refactor DBIx::Class::Storage::Statistics::debugfh() to be lazy

0.08124 2010-10-28 14:23 (UTC)
    * New Features / Changes
        - Add new -ident "function" indicating rhs is a column name
          { col => { -ident => 'othercol' } } vs { col => \'othercol' }
        - Extend 'proxy' relationship attribute
        - Use DBIx::Class::Storage::Debug::PrettyPrint when the
          environment variable DBIC_TRACE_PROFILE is set, see
          DBIx::Class::Storage for more information
        - Implemented add_unique_constraints() which delegates to
          add_unique_constraint() as appropriate
        - add_unique_constraint() now poparly throws if called with
          multiple constraint definitions
        - No longer depend on SQL::Abstract::Limit - DBIC has been doing
          most of the heavy lifting for a while anyway
        - FilterColumn now passes data through when transformations
          are not specified rather than throwing an exception.
        - Optimized RowNum based Oracle limit-dialect (RT#61277)
        - Requesting a pager on a resultset with cached entries now
          throws an exception, instead of returning a 1-page object
          since the amount of rows is always equal to the "pagesize"
        - $rs->pager now uses a lazy count to determine the amount of
          total entries only when really needed, instead of doing it
          at instantiation time
        - New documentation map organized by features
          (DBIx::Class::Manual::Features)
        - find( { ... }, { key => $constraint } ) now throws an exception
          when the supplied data does not fully specify $constraint
        - find( col1 => $val1, col2 => $val2, ... ) is no longer supported
          (it has been in deprecated state for more than 4 years)
        - Make sure exception_action does not allow exception-hiding
          due to badly-written handlers (the mechanism was never meant
          to be able to suppress exceptions)

    * Fixes
        - Fix memory leak during populate() on 5.8.x perls
        - Temporarily fixed 5.13.x failures (RT#58225)
          (perl-core fix still pending)
        - Fix result_soutrce_instance leaks on compose_namespace
        - Fix $_ volatility on load_namespaces (a class changing $_
          at compile time no longer causes a massive fail)
        - Fix find() without a key attr. choosing constraints even if
          some of the supplied values are NULL (RT#59219)
        - Fixed rels ending with me breaking subqueried limit realiasing
        - Fixed $rs->update/delete on resutsets constrained by an
          -or condition
        - Remove rogue GROUP BY on non-multiplying prefetch-induced
          subqueries
        - Fix incorrect order_by handling with prefetch on
          $ordered_rs->search_related ('has_many_rel') resultsets
        - Oracle sequence detection now *really* works across schemas
          (fixed some ommissions from 0.08123)
        - dbicadmin now uses a /usr/bin/env shebang to work better with
          perlbrew and other local perl builds
        - bulk-inserts via $dbh->bind_array (void $rs->populate) now
          display properly in DBIC_TRACE
        - Incomplete exception thrown on relationship auto-fk-inference
          failures
        - Fixed distinct with order_by to not double-specify the same
          column in the GROUP BY clause
        - Properly support column names with symbols (e.g. single quote)
          via custom accessors
        - Fixed ::Schema::Versioned to work properly with quoting on
          (RT#59619)
        - Fixed t/54taint fails under local-lib
        - Fixed SELECT ... FOR UPDATE with LIMIT regression (RT#58554)
        - Fixed CDBICompat to preserve order of column-group additions,
          so that test relying on the order of %{} will no longer fail
        - Fixed mysterious ::Storage::DBI goto-shim failures on older
          perl versions
        - Non-blessed reference exceptions are now correctly preserved
          when thrown from udner DBIC (e.g. from txn_do)
        - No longer disconnecting database handles supplied to connect
          via a coderef
        - Fixed t/inflate/datetime_pg.t failures due to a low dependency
          on DateTime::Format::Pg (RT#61503)
        - Fix dirtyness detection on source-less objects
        - Fix incorrect limit_dialect assignment on Replicated pool members
        - Fix invalid sql on relationship attr order_by with prefetch
        - Fix primary key sequence detection for Oracle
          (first trigger instead of trigger for column)
        - Add various missing things to Optional::Dependencies
        - Skip a test that breaks due to serious bugs in current DBD::SQLite
        - Fix tests related to leaks and leaky perls (5.13.5, 5.13.6)

    * Misc
        - Entire test suite now passes under DBIC_TRACE=1
        - Makefile.PL no longer imports GetOptions() to interoperate
          better with Catalyst installers
        - Bumped minimum Module::Install for developers
        - Bumped DBD::SQLite dependency and removed some TODO markers
          from tests (RT#59565)
        - Do not execute t/zzzzzzz_sqlite_deadlock.t for regular module
          installs - test is prone to spontaneous blow up
        - DT-related tests now require a DateTime >= 0.55 (RT#60324)
        - Makefile.PL now provides a pre-parsed DBIC version to the
          Opt::Dep pod generator
        - t/52leaks.t now performs very aggressive leak detection in
          author/smoker mode

0.08123 2010-06-12 14:46 (UTC)
    * Fixes
        - Make sure Oracle identifier shortener applies to auto-generated
          column names, so we stay within the 30-char limit (RT#58271)
        - Oracle sequence detection now works across schemas
        - Fix a Storage/$dbh leak introduced by the migration to
          Try::Tiny (this is *not* a Try::Tiny bug)
        - Fix corner case of count with group-by over a 1:1 join column
          where the selector ends up with column name clashes
        - POD fixes (RT#58247)

    * Misc
        - Test suite default on-disk database now checks for Win32
          fail-conditions even when running on other OSes

0.08122 2010-06-03 17:41 (UTC)
    * New Features
        - Add DBIx::Class::FilterColumn for non-ref filtering
        - ::Storage::DBI now correctly preserves a parent $dbh from
          terminating children, even during interpreter-global
          out-of-order destruction
        - dbicadmin supports an -I option with the same semantics as
          perl itself
        - InflateColumn::DateTime support for MSSQL via DBD::Sybase
        - Millisecond precision support for MSSQL datetimes for
          InflateColumn::DateTime
        - Oracle-specific hierarchical query syntax support:
          CONNECT BY (NOCYCLE) / START WITH / ORDER SIBLINGS BY
        - Support connecting using $ENV{DBI_DSN} and $ENV{DBI_DRIVER}
        - current_source_alias method on ResultSet objects to
          determine the alias to use in programatically assembled
          search()es (originally added in 0.08100 but unmentioned)
        - Rewrite/unification of all subselecting limit emulations
          (RNO, Top, RowNum) to be much more robust wrt complex joined
          resultsets
        - MSSQL limits now don't require nearly as many applications of
          the unsafe_subselect_ok attribute, due to optimized queries
        - Support for Generic Subquery limit "emulation" - awfully slow
          and inefficient but works on almost any db, and is preferred
          to software limit emulation
        - Sybase ASE driver now uses SET ROWCOUNT where possible, and
          Generic Subquery otherwise for limit support instead of always
          using software limit emulation
        - create_ddl_dir (and derivatives) now attempt to create the given
          $ddl_dir if it does not already exist
        - deployment_statements now automatically supplies the current RDBMS
          version to SQLT producer_args for MySQL, Pg, SQLite and Oracle

    * Fixes
        - Fix nasty potentially data-eating bug when deleting/updating
          a limited resultset
        - Fix find() to use result_class set on object
        - Fix result_class setter behaviour to not mistakenly stuff attrs.
        - Don't try and ensure_class_loaded an object. This doesn't work.
        - Fix as_subselect_rs to not inject resultset class-wide where
          conditions outside of the resulting subquery
        - Fix count() failing with {for} resultset attribute (RT#56257)
        - Fixed incorrect detection of Limit dialect on unconnected $schema
        - update() on row not in_storage no longer throws an exception
          if there are no dirty columns to update (fixes cascaded update
          annoyances)
        - update()/delete() on prefetching resultsets no longer results
          in malformed SQL (some $rs attributes were erroneously left in)
        - Fix dbicadmin to allow deploy() on non-versioned schema
        - Fix dbicadmin to respect sql_dir on upgrade() (RT#57732)
        - Update Schema::Versioned to respect hashref style of
          connection_info
        - Do not recreate the same related object twice during MultiCreate
          (solves the problem of orphaned IC::FS files)
        - Fully qualify xp_msver selector when using DBD::Sybase with
          MSSQL (RT#57467)
        - Fix ::DBI::Storage to always be able to present a full set of
          connect() attributes to e.g. Schema::Versioned
        - Fix Oracle auto-inc trigger detection of "INSERT OR UPDATE"-type
          triggers

    * Misc
        - Reformatted Changelog \o/
        - DBIC goes git://git.shadowcat.co.uk/dbsrgits/DBIx-Class.git
        - Allow developers to skip optional dependency forcing when working
          from a checkout
        - Add a warning to load_namespaces if a class in ResultSet/ is not
          a subclass of DBIx::Class::ResultSet
        - All DBIC exception-handling switched to Try::Tiny
        - All DBIC modules are now free of imports via namespace::clean
        - Depend on optimized SQL::Abstract (faster SQL generation)
        - Depend on new Class::Accessor::Grouped reintroducing optional use
          of Class::XSAccessor (just install C::XSA and get lightning fast
          column accessors)

0.08121 2010-04-11 18:43:00 (UTC)
        - Support for Firebird RDBMS with DBD::InterBase and ODBC
        - Add core support for INSERT RETURNING (for storages that
          supports this syntax, currently PostgreSQL and Firebird)
        - Fix spurious warnings on multiple UTF8Columns component loads
        - DBIx::Class::UTF8Columns entered deprecated state
        - DBIx::Class::InflateColumn::File entered deprecated state
        - DBIx::Class::Optional::Dependencies left experimental state
        - Add req_group_list to Opt::Deps (RT#55211)
        - Add support for mysql-specific STRAIGHT_JOIN (RT#55579)
        - Cascading delete/update are now wrapped in a transaction
          for atomicity
        - Fix accidental autovivification of ENV vars
        - Fix update_all and delete_all to be wrapped in a transaction
        - Fix multiple deficiencies when using MultiCreate with
          data-encoder components (e.g. ::EncodedColumn)
        - Fix regression where SQL files with comments were not
          handled properly by ::Schema::Versioned.
        - Fix regression on not properly throwing when $obj->relationship
          is unresolvable
        - Fix the join-optimiser to consider unqualified column names
          whenever possible
        - Fix an issue with multiple same-table joins confusing the join
          optimizier
        - Add has_relationship method to row objects
        - Fix regression in set_column on PK-less objects
        - Better error text on malformed/missing relationships
        - Add POD about the significance of PK columns
        - Fix for SQLite to ignore the (unsupported) { for => ... }
          attribute
        - Fix ambiguity in default directory handling of create_ddl_dir
          (RT#54063)
        - Support add_columns('+colname' => { ... }) to augment column
          definitions.

0.08120 2010-02-24 08:58:00 (UTC)
        - Make sure possibly overwritten deployment_statements methods in
          schemas get called on $schema->deploy
        - Fix count() with group_by aliased-function resultsets
        - with_deferred_fk_checks() Oracle support
        - Massive refactor and cleanup of primary key handling
        - Fixed regression losing custom result_class (really this time)
          (RT#54697)
        - Fixed regression in DBIC SQLT::Parser failing with a classname
          (as opposed to a schema object)
        - Changes to Storage::DBI::Oracle to accomodate changes in latest
          SQL::Translator (quote handling)
        - Make sure deployment_statements is per-storage overridable
        - Fix dbicadmin's (lack of) POD

0.08119 2010-02-15 09:36:00 (UTC)
        - Add $rs->is_ordered to test for existing order_by on a resultset
        - Add as_subselect_rs to DBIC::ResultSet from
          DBIC::Helper::ResultSet::VirtualView::as_virtual_view
        - Refactor dbicadmin adding DDL manipulation capabilities
        - New optional dependency manager to aid extension writers
        - Depend on newest bugfixed Moose
        - Make resultset chaining consistent wrt selection specification
        - Storage::DBI::Replicated cleanup
        - Fix autoinc PKs without an autoinc flag on Sybase ASA

0.08118 2010-02-08 11:53:00 (UTC)
        - Fix a bug causing UTF8 columns not to be decoded (RT#54395)
        - Fix bug in One->Many->One prefetch-collapse handling (RT#54039)
        - Cleanup handling of relationship accessor types

0.08117 2010-02-05 17:10:00 (UTC)
        - Perl 5.8.1 is now the minimum supported version
        - Massive optimization of the join resolution code - now joins
          will be removed from the resulting SQL if DBIC can prove they
          are not referenced by anything
        - Subqueries no longer marked experimental
        - Support for Informix RDBMS (limit/offset and auto-inc columns)
        - Support for Sybase SQLAnywhere, both native and via ODBC
        - might_have/has_one now warn if applied calling class's column
          has is_nullable set to true.
        - Fixed regression in deploy() with a {sources} table limit applied
          (RT#52812)
        - Views without a view_definition will throw an exception when
          parsed by SQL::Translator::Parser::DBIx::Class
        - Stop the SQLT parser from auto-adding indexes identical to the
          Primary Key
        - InflateColumn::DateTime refactoring to allow fine grained method
          overloads
        - Fix ResultSetColumn improperly selecting more than the requested
          column when +columns/+select is present
        - Fix failure when update/delete of resultsets with complex WHERE
          SQLA structures
        - Fix regression in context sensitiveness of deployment_statements
        - Fix regression resulting in overcomplicated query on
          search_related from prefetching resultsets
        - Fix regression on all-null returning searches (properly switch
          LEFT JOIN to JOIN in order to distinguish between both cases)
        - Fix regression in groupedresultset count() used on strict-mode
          MySQL connections
        - Better isolation of RNO-limited queries from the rest of a
          prefetching resultset
        - New MSSQL specific resultset attribute to allow hacky ordered
          subquery support
        - Fix nasty schema/dbhandle leak due to SQL::Translator
        - Initial implementation of a mechanism for Schema::Version to
          apply multiple step upgrades
        - Fix regression on externally supplied $dbh with AutoCommit=0
        - FAQ "Custom methods in Result classes"
        - Cookbook POD fix for add_drop_table instead of add_drop_tables
        - Schema POD improvement for dclone

0.08115 2009-12-10 09:02:00 (CST)
        - Real limit/offset support for MSSQL server (via Row_Number)
        - Fix distinct => 1 with non-selecting order_by (the columns
          in order_by also need to be aded to the resulting group_by)
        - Do not attempt to deploy FK constraints pointing to a View
        - Fix count/objects from search_related on limited resultset
        - Stop propagating distinct => 1 over search_related chains
        - Make sure populate() inherits the resultset conditions just
          like create() does
        - Make get_inflated_columns behave identically to get_columns
          wrt +select/+as (RT#46953)
        - Fix problems with scalarrefs under InflateColumn (RT#51559)
        - Throw exception on delete/update of PK-less resultsets
        - Refactored Sybase storage driver into a central ::DBI::Sybase
          dispatcher, and a sybase-specific ::DBI::Sybase::ASE
        - Fixed an atrocious DBD::ADO bind-value bug
        - Cookbook/Intro POD improvements

0.08114 2009-11-14 17:45:00 (UTC)
        - Preliminary support for MSSQL via DBD::ADO
        - Fix botched 0.08113 release (invalid tarball)

0.08113 2009-11-13 23:13:00 (UTC)
        - Fix populate with has_many bug
          (RT #50828)
        - Fix Oracle autoincrement broken for Resultsets with scalar refs
          (RT #50874)
        - Complete Sybase RDBMS support including:
          - Support for TEXT/IMAGE columns
          - Support for the 'money' datatype
          - Transaction savepoints support
          - DateTime inflation support
          - Support for bind variables when connecting to a newer Sybase with
             OpenClient libraries
          - Support for connections via FreeTDS with CASTs for bind variables
             when needed
          - Support for interpolated variables with proper quoting when
             connecting to an older Sybase and/or via FreeTDS
          - bulk API support for populate()
        - Transaction support for MSSQL via DBD::Sybase
        - Add is_paged method to DBIx::Class::ResultSet so that we can
          check that if we want a pager
        - Skip versioning test on really old perls lacking Time::HiRes
          (RT #50209)
        - Fixed on_connect_do/call regression when used with a coderef
          connector (RT #50003)
        - A couple of fixes to Ordered to remedy subclassing issues
        - Fixed another lingering problem with PostgreSQL
          auto-increment support and its interaction with multiple
          schemas
        - Remove some IN workarounds, and require a recent version of
          SQLA instead
        - Improvements to populate's handling of mixed scalarref values
        - Fixed regression losing result_class after $rs->find (introduced
          in 0.08108)
        - Fix in_storage() to return 1|0 as per existing documentation
        - Centralize handling of _determine_driver calls prior to certain
          ::Storage::DBI methods
        - Fix update/delete arbitrary condition handling (RT#51409)
        - POD improvements

0.08112 2009-09-21 10:57:00 (UTC)
        - Remove the recommends from Makefile.PL, DBIx::Class is not
          supposed to have optional dependencies. ever.
        - Mangle the DBIx/Class.pm POD to be more clear about
          copyright and license
        - Put back PG's multiple autoinc per table support, accidentally
          dropped during the serial-autodetection rewrite
        - Make sure ResultSetColumn does not depend on the (undefined)
          return value of ->cursor->reset()
        - Add single() to ResultSetColumn (same semantics as ResultSet)
        - Make sure to turn off IDENTITY_INSERT after insert() on MSSQL
          tables that needed it
        - More informative exception on failing _resolve_relationship
        - Allow undef/NULL as the sole grouping value in Ordered
        - Fix unreported rollback exceptions in TxnScopeGuard
        - Fix overly-eager left-join chain enforcing code
        - Warn about using distinct with an existing group_by
        - Warn about attempting to $rs->get_column a non-unique column
          when has_many joins are added to resultset
        - Refactor of the exception handling system (now everything is a
          DBIx::Class::Exception object)

0.08111 2009-09-06 21:58:00 (UTC)
        - The hashref to connection_info now accepts a 'dbh_maker'
          coderef, allowing better intergration with Catalyst
        - Fixed a complex prefetch + regular join regression introduced
          in 0.08108
        - Fixed insert_bulk rebless handling
        - Fixed Storable roundtrip regression, and general serialization
          cleanup
        - SQLT related fixes:
          - sqlt_type is now called on the correct storage object
          - hooks can now see the correct producer_type (RT#47891)
          - optional SQLT requirements for e.g. deploy() bumped to 0.11002
        - Really fixed (and greatly cleaned up) postgresql autoinc sequence
          autodetection
        - Automatically detect MySQL v3 and use INNER JOIN instead of JOIN
        - POD improvements (including RT#48769)
        - Test suite tweaks (including fixes for recent CPANTS fails)
        - Better support for MSSQL IDENTITY_INSERT ON

0.08109 2009-08-18 08:35:00 (UTC)
        - Replication updates:
          - Improved the replication tests so that they are more reliable
            and accurate, and hopefully solve some cross platform issues.
          - Bugfixes related to naming particular replicants in a
            'force_pool' attribute.
          - Lots of documentation updates, including a new Introduction.pod
            file.
          - Fixed the way we detect transaction to make this more reliable
            and forward looking.
          - Fixed some trouble with the way Moose Types are used.
          - Made discard_chages/get_from_storage replication aware (they
            now read from the master storage by default)
        - Refactor of MSSQL storage drivers, with some new features:
          - Support for placeholders for MSSQL via DBD::Sybase with proper
            autodetection
          - 'uniqueidentifier' support with auto newid()
          - Dynamic cursor support and other MARS options for ODBC
          - savepoints with auto_savepoint => 1
        - Support for MSSQL 'money' type
        - Support for 'smalldatetime' type used in MSSQL and Sybase for
          InflateColumn::DateTime
        - Support for Postgres 'timestamp without timezone' type in
          InflateColumn::DateTime (RT#48389)
        - Added new MySQL specific on_connect_call macro 'set_strict_mode'
          (also known as make_mysql_not_suck_as_much)
        - Multiple prefetch-related fixes:
          - Adjust overly agressive subquery join-chain pruning
          - Always preserve the outer join-chain - fixes numerous
            problems with search_related chaining
          - Deal with the distinct => 1 attribute properly when using
            prefetch
        - An extension of the select-hashref syntax, allowing labeling
          SQL-side aliasing: select => [ { max => 'foo', -as => 'bar' } ]
        - Massive optimization of the DBI storage layer - reduce the
          amount of connected() ping-calls
        - Some fixes of multi-create corner cases
        - Multiple POD improvements
        - Added exception when resultset is called without an argument
        - Improved support for non-schema-qualified tables under
          Postgres (fixed last_insert_id sequence name auto-detection)

0.08108 2009-07-05 23:15:00 (UTC)
        - Fixed the has_many prefetch with limit/group deficiency -
          it is now possible to select "top 5 commenters" while
          prefetching all their comments
        - New resultsed method count_rs, returns a ::ResultSetColumn
          which in turn returns a single count value
        - Even better support of count with limit
        - New on_connect_call/on_disconnect_call functionality (check
          POD of Storage::DBI)
        - Automatic datetime handling environment/session setup for
          Oracle via connect_call_datetime_setup()
        - count/all on related left-joined empty resultsets now correctly
          returns 0/()
        - Fixed regression when both page and offset are specified on
          a resultset
        - Fixed HRI returning too many empty results on multilevel
          nonexisting prefetch
        - make_column_dirty() now overwrites the deflated value with an
          inflated one if such exists
        - Fixed set_$rel with where restriction deleting rows outside
          the restriction
        - populate() returns the created objects or an arrayref of the
          created objects depending on scalar vs. list context
        - Fixed find_related on 'single' relationships - the former
          implementation would overspecify the WHERE condition, reporting
          no related objects when there in fact is one
        - SQL::Translator::Parser::DBIx::Class now attaches tables to the
          central schema object in relationship dependency order
        - Fixed regression in set_column() preventing sourceless object
          manipulations
        - Fixed a bug in search_related doubling a join if the original
          $rs already joins/prefetches the same relation
        - Storage::DBI::connected() improvements for Oracle and Sybase
        - Fixed prefetch+incomplete select regression introduced in
          0.08100
        - MSSQL limit (TOP emulation) fixes and improvements

0.08107 2009-06-14 08:21:00 (UTC)
        - Fix serialization regression introduced in 0.08103 (affects
          Cursor::Cached)
        - POD fixes
        - Fixed incomplete ::Replicated debug output

0.08106 2009-06-11 21:42:00 (UTC)
        - Switched SQLite storage driver to DateTime::Format::SQLite
          (proper timezone handling)
        - Fix more test problems

0.08105 2009-06-11 19:04:00 (UTC)
        - Update of numeric columns now properly uses != to determine
          dirtyness instead of the usual eq
        - Fixes to IC::DT tests
        - Fixed exception when undef_if_invalid and timezone are both set
          on an invalid datetime column

0.08104 2009-06-10 13:38:00 (UTC)
        - order_by now can take \[$sql, @bind] as in
          order_by => { -desc => \['colA LIKE ?', 'somestring'] }
        - SQL::Abstract errors are now properly croak()ed with the
          correct trace
        - populate() now properly reports the dataset slice in case of
          an exception
        - Fixed corner case when populate() erroneously falls back to
          create()
        - Work around braindead mysql when doing subquery counts on
          resultsets containing identically named columns from several
          tables
        - Fixed m2m add_to_$rel to invoke find_or_create on the far
          side of the relation, to avoid duplicates
        - DBIC now properly handles empty inserts (invoking all default
          values from the DB, normally via INSERT INTO tbl DEFAULT VALUES
        - Fix find_or_new/create to stop returning random rows when
          default value insert is requested (RT#28875)
        - Make IC::DT extra warning state the column name too
        - It is now possible to transparrently search() on columns
          requiring DBI bind (i.e. PostgreSQL BLOB)
        - as_query is now a Storage::DBI method, so custom cursors can
          be seamlessly used
        - Fix search_related regression introduced in 0.08103

0.08103 2009-05-26 19:50:00 (UTC)
        - Multiple $resultset -> count/update/delete fixes. Now any
          of these operations will succeed, regardless of the complexity
          of $resultset. distinct, group_by, join, prefetch are all
          supported with expected results
        - Return value of $rs->delete is now the storage return value
          and not 1 as it used to be
        - don't pass SQL functions into GROUP BY
        - Remove MultiDistinctEmulation.pm, effectively deprecating
          { select => { distinct => [ qw/col1 col2/ ] } }
        - Change ->count code to work correctly with DISTINCT (distinct => 1)
          via GROUP BY
        - Removed interpolation of bind vars for as_query - placeholders
          are preserved and nested query bind variables are properly
          merged in the correct order
        - Refactor DBIx::Class::Storage::DBI::Sybase to automatically
          load a subclass, namely Microsoft_SQL_Server.pm
          (similar to DBIx::Class::Storage::DBI::ODBC)
        - Refactor InflateColumn::DateTime to allow components to
          circumvent DateTime parsing
        - Support inflation of timestamp datatype
        - Support BLOB and CLOB datatypes on Oracle
        - Storage::DBI::Replicated::Balancer::Random:
          added master_read_weight
        - Storage::DBI::Replicated: storage opts from connect_info,
          connect_info merging to replicants, hashref connect_info support,
          improved trace output, other bug fixes/cleanups
        - distinct => 1 with prefetch now groups by all columns
        - on_connect_do accepts a single string equivalent to a one
          element arrayref (RT#45159)
        - DB2 limit + offset now works correctly
        - Sybase now supports autoinc PKs (RT#40265)
        - Prefetch on joins over duplicate relations now works
          correctly (RT#28451)
        - "timestamp with time zone" columns (for Pg) now get inflated with a
          time zone information preserved
        - MSSQL Top limit-emulation improvements (GROUP BY and subquery support)
        - ResultSetColumn will not lose the joins infered from a parent
          resultset prefetch

0.08102 2009-04-30 08:29:00 (UTC)
        - Fixed two subtle bugs when using columns or select/as
          paired with a join (limited prefetch)
        - Fixed breakage of cdbi tests (RT#45551)
        - Some POD improvements

0.08101 2009-04-27 09:45:00 (UTC)
        - Fix +select, +as, +columns and include_columns being stripped
          by $rs->get_column
        - move load_optional_class from DBIx::Class::Componentised to
          Class::C3::Componentised, bump dependency
        - register_extra_source() now *really* fixed wrt subclassing
        - Added missing POD descriptions (RT#45195)
        - Fix insert() to not store_column() every present object column
        - Multiple Makefile.PL fixes

0.08100 2009-04-19 11:39:35 (UTC)
        - Todo out the register_extra_source test until after shipping

0.08099_08 2009-03-30 00:00:00 (UTC)
        - Fixed taint mode with load_namespaces
        - Putting IC::DateTime locale, timezone or floating_tz_ok attributes into
          extra => {} has been deprecated. The new way is to put these things
          directly into the columns definition
        - Switched MI code to MRO::Compat
        - Document db-side default_value caveats
        - Search_like() now warns to indicate deprecation in 0.09.
        - TxnScopeGuard left experimental state

0.08099_07 2009-02-27 02:00:00 (UTC)
        - multi-create using find_or_create rather than _related for post-insert
        - fix get_inflated_columns to check has_column_loaded
        - Add DBIC_MULTICREATE_DEBUG env var (undocumented, quasi-internal)
        - Fix up multi-create to:
          - correctly propagate columns loaded during multi-insert of rels
          - not try and insert things tagged on via new_related unless required
        - Possible to set locale in IC::DateTime extra => {} config
        - Calling the accessor of a belongs_to when the foreign_key
          was NULL and the row was not stored would unexpectedly fail
        - Split sql statements for deploy only if SQLT::Producer returned a scalar
          containing all statements to be executed
        - Add as_query() for ResultSet and ResultSetColumn. This makes subqueries
          possible. See the Cookbook for details.
        - Massive rewrite of Ordered to properly handle position constraints and
          to make it more matpath-friendly
        - deploy_statements called ddl_filename with the $version and $dir arguments
          in the wrong order.
        - columns/+columns attributes now support { as => select } hahsrefs
        - support for views both in DBIC and via deploy() in SQLT

0.08099_06 2009-01-23 07:30:00 (UTC)
        - Allow a scalarref to be supplied to the 'from' resultset attribute
        - Classes submitted as result_class for a resultsource are now
          automatically loaded via ensure_loaded()
        - 'result_class' resultset attribute, identical to result_class()
        - add 'undef_on_null_fk' option for relationship accessors of type 'single'.
          This will prevent DBIC from querying the database if one or more of
          the key columns IS NULL
        - for 'belongs_to' rels, 'undef_on_null_fk' defaults to true.
        - fixed scope unaware last_insert_id fetching for MSSQL
          (http://msdn.microsoft.com/en-us/library/ms190315.aspx)
        - an sqlt_deploy_hook can now be shared between result sources using
          a configurable callback trigger
        - new order_by => { -desc => 'colname' } syntax supported
        - PG array datatype supported
        - insert should use store_column, not set_column to avoid marking
          clean just-stored values as dirty. New test for this
        - regression test for source_name

0.08099_05 2008-10-30 21:30:00 (UTC)
        - Rewrite of Storage::DBI::connect_info(), extended with an
          additional argument format type
        - InflateColumn::DateTime: add warning about floating timezone
        - InflateColumn::DateTime: possible to enforce/skip inflation
        - delete throws exception if passed arguments to prevent drunken mishaps.
        - Fix storage to copy scalar conds before regexping to avoid
          trying to modify a constant in odd edge cases
        - Related resultsets on uninserted objects are now empty
        - Fixed up related resultsets and multi-create
        - Fixed superfluous connection in ODBC::_rebless
        - Fixed undef PK for first insert in ODBC::Microsoft_SQL_Server
        - Added virtual method to Versioned so a user can create upgrade
          path across multiple versions (jgoulah)
        - Better (and marginally faster) implementation of the HashRefInflator
          hash construction algorithm
        - Allow explicit specification of ON DELETE/ON UPDATE constraints
          when using the SQLT parser

0.08099_04 2008-07-24 01:00:00
        - Functionality to storage to enable a sub to be run without FK checks
        - Fixed $schema->clone bug which caused clone and source to share
          internal hash refs
        - Added register_extra_source methods for additional sources
        - Added datetime_undef_if_invalid for InflateColumn::DateTime to
          return undef on invalid date/time values
        - Added search_related_rs method to ResultSet
        - add a make_column_dirty method to Row to force updates
        - throw a clear exception when user tries multi-has_many prefetch
        - SQLT parser prefixes index names with ${table}_idx_ to avoid clashes
        - mark ResultSetManager as deprecated and undocument it
        - pod fix (RT #32988)
        - add Test::Exception to test requirements (RT #34256)
        - make ash's build_requires/META.yml fixes work better
        - is_deferable support on relations used by the SQL::Translator
          parser
        - Refactored DBIx::Class::Schema::Versioned
        - Syntax errors from resultset components are now reported correctly
        - sqltargs respected correctly in deploy et al.
        - Added support for savepoints, and using them automatically in
          nested transactions if auto_savepoint is set in connect_info.
        - Changed naming scheme for constraints and keys in the sqlt parser;
          names should now be consistent and collision-free.
        - Improve handling of explicit key attr in ResultSet::find
        - Add warnings for non-unique ResultSet::find queries
        - Changed Storage::DBI::Replication to Storage::DBI::Replicated and
          refactored support.
        - By default now deploy/diff et al. will ignore constraint and index
          names
        - Add ResultSet::_is_deterministic_value, make new_result filter the
          values passed to new to drop values that would generate invalid SQL.
        - Use Sub::Name to name closures before installing them. Fixes
          incompatibility with Moose method modifiers on generated methods.

0.08010 2008-03-01 10:30
        - Fix t/94versioning.t so it passes with latest SQL::Translator

0.08009 2008-01-20 13:30
        - Made search_rs smarter about when to preserve the cache to fix
          mm prefetch usage
        - Added Storage::DBI subclass for MSSQL over ODBC.
        - Added freeze, thaw and dclone methods to Schema so that thawed
          objects will get re-attached to the schema.
        - Moved dbicadmin to JSON::Any wrapped JSON.pm for a sane API
          (also fixes RT #32393)
        - introduced DBIx::Class::set_inflated_columns
        - DBIx::Class::Row::copy uses set_inflated_columns

0.08008 2007-11-16 14:30:00
        - Fixed join merging bug (test from Zby)
        - When adding relationships, it will throw an exception if you get the
          foreign and self parts the wrong way round in the condition
        - ResultSetColumn::func() now returns all results if called in list
          context; this makes things like func('DISTINCT') work as expected
        - Many-to-many relationships now warn if the utility methods would
          clash
        - InflateColumn::DateTime now accepts an extra parameter of timezone
          to set timezone on the DT object (thanks Sergio Salvi)
        - Added sqlt_deploy_hook to result classes so that indexes can be
          added.
        - Added startup checks to warn loudly if we appear to be running on
          RedHat systems from perl-5.8.8-10 and up that have the bless/overload
          patch applied (badly) which causes 2x -> 100x performance penalty.
          (Jon Schutz)
        - ResultSource::reverse_relationship_info can distinguish between
          sources using the same table
        - Row::insert will now not fall over if passed duplicate related objects
        - Row::copy will not fall over if you have two relationships to the
          same source with a unique constraint on it

0.08007 2007-09-04 19:36:00
        - patch for Oracle datetime inflation (abram@arin.net)
        - added on_disconnect_do
        - on_connect_do and on_disconnect_do take coderefs and arrayrefs

0.08006 2007-08-12 15:12:00
        - Move to using Class::C3::Componentised
        - Remove warn statement from DBIx::Class::Row

0.08005 2007-08-06
        - add timestamp fix re rt.cpan 26978 - no test yet but change
          clearly should cause no regressions
        - provide alias for related_resultset via local() so it's set
          correctly at resultset construction time (fixes RestrictWithObject)
        - fixes bind params in debug statements
          (original test from abraxxa)
        - fixed storage->connected fork bug
          (test and fix from Radu Greab)
        - add 1; to AccessorGroup.pm for stuff that still uses it
        - refactor Statistics to create debugging filehandle to fix bug with
          closed STDERR, update docs and modify Versioned to use Statistics
          (original fix from diz)

0.08004 2007-08-06 19:00:00
        - fix storage connect code to not trigger bug via auto-viv
          (test from aherzog)
        - fixup cursor_class to be an 'inherited' attr for per-package defaults
        - add default_resultset_attributes entry to Schema
        - optimisation in DBI::Cursor to check software_limit before falling
          back to base Cursor->all
        - fix bug with create_multi not inserting non-storage objects
          (test and fix from davinchi)
        - DBIx::Class::AccessorGroup made empty subclass of
          Class::Accessor::Grouped
        - fixed an ugly bug regarding $dbh->{AutoCommit} and transactions
        - ensure_class_loaded handles non-classnames better.
        - non-destructive hashref handling for connect_info options
        - count no longer returns negative values after slice
          (report and test from JOHANL)
        - rebless before building datetime_parser
          (patch from mattlaw / Matt Lawrence)

0.08003 2007-07-14 18:01:00
        - improved populate bulk_insert mode
        - fixed up multi_create to be more intelligent about PK<->PK rels
        - fix many-many rels to not use set_columns
        - Unmarked deploy as experimental since it isn't anymore
        - Removed Cwd dep since it's not required and causes problems
          with debian packaging
        - Patch to fix ? in data for NoBindVars (from Tom Hukins)
        - Restored mk_classaccessor method for compatibility
        - Fixed group_by problem with oracle limit syntax
        - Fixed attr merging problem
        - Fixed $rs->get_column w/prefetch  problem

0.08002 2007-06-20 06:10:00
        - add scope guard to Row::insert to ensure rollback gets called
        - more heuristics in Row::insert to try and get insert order right
        - eliminate vestigial code in PK::Auto
        - more expressive DBI errors
        - soften errors during deploy
        - ensure_connected before txn_begin to catch stomping on transaction
          depth
        - new method "rethrow" for our exception objects

0.08001 2007-06-17 21:21:02
        - Cleaned up on_connect handling for versioned
        - removed DateTime use line from multi_create test
        - hid DBIx::ContextualFetch::st override in CDBICompat

0.08000 2007-06-17 18:06:12
        - Fixed DBIC_TRACE debug filehandles to set ->autoflush(1)
        - Fixed circular dbh<->storage in HandleError with weakref

0.07999_06 2007-06-13 04:45:00
        - tweaked Row.pm to make last_insert_id take multiple column names
        - Fixed DBIC::Storage::DBI::Cursor::DESTROY bug that was
          messing up exception handling
        - added exception objects to eliminate stacktrace/Carp::Clan
          output redundancy
        - setting $ENV{DBIC_TRACE} defaults stacktrace on.
        - added stacktrace option to Schema, makes throw_exception
          use "confess"
        - make database handles use throw_exception by default
        - make database handles supplied by a coderef use our
          standard HandleError/RaiseError/PrintError
        - add "unsafe" connect_info option to suppress our setting
          of HandleError/RaiseError/PrintError
        - removed several redundant evals whose sole purpose was to
          provide extra debugging info
        - fixed page-within-page bug (reported by nilsonsfj)
        - fixed rare bug when database is disconnected inbetween
          "$dbh->prepare_cached" and "$sth->execute"

0.07999_05 2007-06-07 23:00:00
        - Made source_name rw in ResultSource
        - Fixed up SQL::Translator test/runtime dependencies
        - Fixed t/60core.t in the absence of DateTime::Format::MySQL
        - Test cleanup and doc note (ribasushi)

0.07999_04 2007-06-01 14:04:00
        - pulled in Replication storage from branch and marked EXPERIMENTAL
        - fixup to ensure join always LEFT after first LEFT join depthwise
        - converted the vendor tests to use schema objects intead of schema
          classes, made cleaned more reliable with END blocks
        - versioning support via DBIx::Class::Schema::Versioned
        - find/next now return undef rather than () on fail from Bernhard Graf
        - rewritten collapse_result to fix prefetch
        - moved populate to resultset
        - added support for creation of related rows via insert and populate
        - transaction support more robust now in the face of varying AutoCommit
          and manual txn_begin usage
        - unbreak back-compat for Row/ResultSet->new_result
        - Added Oracle/WhereJoins.pm for Oracle >= 8 to support
          Oracle <= 9i, and provide Oracle with a better join method for
          later versions.  (I use the term better loosely.)
        - The SQL::T parser class now respects a relationship attribute of
          is_foreign_key_constrain to allow explicit control over wether or
          not a foreign constraint is needed
        - resultset_class/result_class now (again) auto loads the specified
          class; requires Class::Accessor::Grouped 0.05002+
        - added get_inflated_columns to Row
        - %colinfo accessor and inflate_column now work together
        - More documentation updates
        - Error messages from ->deploy made more informative
        - connect_info will now always return the arguments it was
          originally given
        - A few small efficiency improvements for load_classes
          and compose_namespace

0.07006 2007-04-17 23:18:00
        - Lots of documentation updates
        - deploy now takes an optional 'source_names' parameter (dec)
        - Quoting for for columns_info_for
        - RT#25683 fixed (multiple open sths on DBD::Sybase)
        - CDBI compat infers has_many from has_a (Schwern)
        - Fix ddl_filename transformation (Carl Vincent)

0.07999_02 2007-01-25 20:11:00
        - add support for binding BYTEA and similar parameters (w/Pg impl)
        - add support to Ordered for multiple ordering columns
        - mark DB.pm and compose_connection as deprecated
        - switch tests to compose_namespace
        - ResultClass::HashRefInflator added
        - Changed row and rs objects to not have direct handle to a source,
          instead a (schema,source_name) tuple of type ResultSourceHandle

0.07005 2007-01-10 18:36:00
        - fixup changes file
        - remove erroneous .orig files - oops

0.07004 2007-01-09 21:52:00
        - fix find_related-based queries to correctly grep the unique key
        - fix InflateColumn to inflate/deflate all refs but scalar refs

0.07003 2006-11-16 11:52:00
        - fix for rt.cpan.org #22740 (use $^X instead of hardcoded "perl")
        - Tweaks to resultset to allow inflate_result to return an array
        - Fix UTF8Columns to work under Perl <= 5.8.0
        - Fix up new_result in ResultSet to avoid alias-related bugs
        - Made new/update/find handle 'single' rel accessor correctly
        - Fix NoBindVars to be safer and handle non-true bind values
        - Don't blow up if columns_info_for returns useless results
        - Documentation updates

0.07999_01 2006-10-05 21:00:00
        - add connect_info option "disable_statement_caching"
        - create insert_bulk using execute_array, populate uses it
        - added DBIx::Class::Schema::load_namespaces, alternative to
          load_classes
        - added source_info method for source-level metadata (kinda like
          column_info)
        - Some of ::Storage::DBI's code/docs moved to ::Storage
        - DBIx::Class::Schema::txn_do code moved to ::Storage
        - Storage::DBI now uses exceptions instead of ->ping/->{Active} checks
        - Storage exceptions are thrown via the schema class's throw_exception
        - DBIx::Class::Schema::throw_exception's behavior can be modified via
          ->exception_action
        - columns_info_for is deprecated, and no longer runs automatically.
          You can make it work like before via
          __PACKAGE__->column_info_from_storage(1) for now
        - Replaced DBIx::Class::AccessorGroup and Class::Data::Accessor with
          Class::Accessor::Grouped. Only user noticible change is to
          table_class on ResultSourceProxy::Table (i.e. table objects in
          schemas) and, resultset_class and result_class in ResultSource.
          These accessors no longer automatically require the classes when
          set.

0.07002 2006-09-14 21:17:32
        - fix quote tests for recent versions of SQLite
        - added reference implementation of Manual::Example
        - backported column_info_from_storage accessor from -current, but
        - fixed inflate_datetime.t tests/stringify under older Test::More
        - minor fixes for many-to-many relationship helpers
        - cleared up Relationship docs, and fixed some typos
        - use ref instead of eval to check limit syntax (to avoid issues with
          Devel::StackTrace)
        - update ResultSet::_cond_for_update_delete to handle more complicated
          queries
        - bugfix to Oracle columns_info_for
        - remove_columns now deletes columns from _columns

0.07001 2006-08-18 19:55:00
        - add directory argument to deploy()
        - support default aliases in many_to_many accessors.
        - support for relationship attributes in many_to_many accessors.
        - stop search_rs being destructive to attrs
        - better error reporting when loading components
        - UTF8Columns changed to use "utf8" instead of "Encode"
        - restore automatic aliasing in ResultSet::find() on nonunique queries
        - allow aliases in ResultSet::find() queries (in cases of relationships
          with prefetch)
        - pass $attrs to find from update_or_create so a specific key can be
          provided
        - remove anonymous blesses to avoid major speed hit on Fedora Core 5's
          Perl and possibly others; for more information see:
          https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=196836
        - fix a pathological prefetch case
        - table case fix for Oracle in columns_info_for
        - stopped search_rs deleting attributes from passed hash

0.07000 2006-07-23 02:30:00
        - supress warnings for possibly non-unique queries, since
          _is_unique_query doesn't infer properly in all cases
        - skip empty queries to eliminate spurious warnings on ->deploy
        - fixups to ORDER BY, tweaks to deepen some copies in ResultSet
        - fixup for RowNum limit syntax with functions

0.06999_07 2006-07-12 20:58:05
        - fix issue with from attr copying introduced in last release

0.06999_06 2006-07-12 17:16:55
        - documentation for new storage options, fix S::A::L hanging on to $dbh
        - substantial refactor of search_related code to fix alias numbering
        - don't generate partial unique keys in ResultSet::find() when a table
          has more than one unique constraint which share a column and only one
          is satisfied
        - cleanup UTF8Columns and make more efficient
        - rename DBIX_CLASS_STORAGE_DBI_DEBUG to DBIC_TRACE (with compat)
        - rename _parent_rs to _parent_source in ResultSet
        - new FAQ.pod!

0.06999_05 2006-07-04 14:40:01
        - fix issue with incorrect $rs->{attrs}{alias}
        - fix subclassing issue with source_name
        - tweak quotes test to output text on failure
        - fix Schema->txn_do to not fail as a classmethod

0.06999_04 2006-06-29 20:18:47
        - disable cdbi-t/02-Film.t warning tests under AS perl
        - fixups to MySQL tests (aka "work round mysql being retarded")
        - compat tweaks for Storage debug logging

0.06999_03 2006-06-26 21:04:44
        - various documentation improvements
        - fixes to pass test suite on Windows
        - rewrote and cleaned up SQL::Translator tests
        - changed relationship helpers to only call ensure_class_loaded when the
          join condition is inferred
        - rewrote many_to_many implementation, now provides helpers for adding
          and deleting objects without dealing with the link table
        - reworked InflateColumn implementation to lazily deflate where
          possible; now handles passing an inflated object to new()
        - changed join merging to not create a rel_2 alias when adding a join
          that already exists in a parent resultset
        - Storage::DBI::deployment_statements now calls ensure_connected
          if it isn't passed a type
        - fixed Componentized::ensure_class_loaded
        - InflateColumn::DateTime supports date as well as datetime
        - split Storage::DBI::MSSQL into MSSQL and Sybase::MSSQL
        - fixed wrong debugging hook call in Storage::DBI
        - set connect_info properly before setting any ->sql_maker things

0.06999_02 2006-06-09 23:58:33
        - Fixed up POD::Coverage tests, filled in some POD holes
        - Added a warning for incorrect component order in load_components
        - Fixed resultset bugs to do with related searches
        - added code and tests for Componentized::ensure_class_found and
          load_optional_class
        - NoBindVars + Sybase + MSSQL stuff
        - only rebless S::DBI if it is still S::DBI and not a subclass
        - Added `use' statement for DBD::Pg in Storage::DBI::Pg
        - stopped test relying on order of unordered search
        - bugfix for join-types in nested joins using the from attribute
        - obscure prefetch problem fixed
        - tightened up deep search_related
        - Fixed 'DBIx/Class/DB.pm did not return a true value' error
        - Revert change to test for deprecated find usage and swallow warnings
        - Slight wording change to new_related() POD
        - new specific test for connect_info coderefs
        - POD clarification and content bugfixing + a few code formatting fixes
        - POD::Coverage additions
        - fixed debugfh
        - Fix column_info stomping

0.06999_01 2006-05-28 17:19:30
        - add automatic naming of unique constraints
        - marked DB.pm as deprecated and noted it will be removed by 1.0
        - add ResultSetColumn
        - refactor ResultSet code to resolve attrs as late as possible
        - merge prefetch attrs into join attrs
        - add +select and +as attributes to ResultSet
        - added InflateColumn::DateTime component
        - refactor debugging to allow for profiling using Storage::Statistics
        - removed Data::UUID from deps, made other optionals required
        - modified SQLT parser to skip dupe table names
        - added remove_column(s) to ResultSource/ResultSourceProxy
        - added add_column alias to ResultSourceProxy
        - added source_name to ResultSource
        - load_classes now uses source_name and sets it if necessary
        - add update_or_create_related to Relationship::Base
        - add find_or_new to ResultSet/ResultSetProxy and find_or_new_related
          to Relationship::Base
        - add accessors for unique constraint names and coulums to
          ResultSource/ResultSourceProxy
        - rework ResultSet::find() to search unique constraints
        - CDBICompat: modify retrieve to fix column casing when ColumnCase is
          loaded
        - CDBICompat: override find_or_create to fix column casing when
          ColumnCase is loaded
        - reorganized and simplified tests
        - added Ordered
        - added the ability to set on_connect_do and the various sql_maker
          options as part of Storage::DBI's connect_info.

0.06003 2006-05-19 15:37:30
        - make find_or_create_related check defined() instead of truth
        - don't unnecessarily fetch rels for cascade_update
        - don't set_columns explicitly in update_or_create; instead use
          update($hashref) so InflateColumn works
        - fix for has_many prefetch with 0 related rows
        - make limit error if rows => 0
        - added memory cycle tests and a long-needed weaken call

0.06002 2006-04-20 00:42:41
        - fix set_from_related to accept undef
        - fix to Dumper-induced hash iteration bug
        - fix to copy() with non-composed resultsource
        - fix to ->search without args to clone rs but maintain cache
        - grab $self->dbh once per function in Storage::DBI
        - nuke ResultSource caching of ->resultset for consistency reasons
        - fix for -and conditions when updating or deleting on a ResultSet

0.06001
        - Added fix for quoting with single table
        - Substantial fixes and improvements to deploy
        - slice now uses search directly
        - fixes for update() on resultset
        - bugfix to Cursor to avoid error during DESTROY
        - transaction DBI operations now in debug trace output

0.06000 2006-03-25 18:03:46
        - Lots of documentation improvements
        - Minor tweak to related_resultset to prevent it storing a searched rs
        - Fixup to columns_info_for when database returns type(size)
        - Made do_txn respect void context (on the off-chance somebody cares)
        - Fix exception text for nonexistent key in ResultSet::find()

0.05999_04 2006-03-18 19:20:49
        - Fix for delete on full-table resultsets
        - Removed caching on count() and added _count for pager()
        - ->connection does nothing if ->storage defined and no args
          (and hence ->connect acts like ->clone under the same conditions)
        - Storage::DBI throws better exception if no connect info
        - columns_info_for made more robust / informative
        - ithreads compat added, fork compat improved
        - weaken result_source in all resultsets
        - Make pg seq extractor less sensitive.

0.05999_03 2006-03-14 01:58:10
        - has_many prefetch fixes
        - deploy now adds drop statements before creates
        - deploy outputs debugging statements if DBIX_CLASS_STORAGE_DBI_DEBUG
            is set

0.05999_02 2006-03-10 13:31:37
        - remove test dep on YAML
        - additional speed tweaks for C3
        - allow scalarefs passed to order_by to go straight through to SQL
        - renamed insert_or_update to update_or_insert (with compat alias)
        - hidden lots of packages from the PAUSE Indexer

0.05999_01 2006-03-09 18:31:44
        - renamed cols attribute to columns (cols still supported)
        - added has_column_loaded to Row
        - Storage::DBI connect_info supports coderef returning dbh as 1st arg
        - load_components() doesn't prepend base when comp. prefixed with +
        - $schema->deploy
        - HAVING support
        - prefetch for has_many
        - cache attr for resultsets
        - PK::Auto::* no longer required since Storage::DBI::* handle auto-inc
        - minor tweak to tests for join edge case
        - added cascade_copy relationship attribute
          (sponsored by Airspace Software, http://www.airspace.co.uk/)
        - clean up set_from_related
        - made copy() automatically null out auto-inc columns
        - added txn_do() method to Schema, which allows a coderef to be
          executed atomically

0.05007 2006-02-24 00:59:00
        - tweak to Componentised for Class::C3 0.11
        - fixes for auto-inc under MSSQL

0.05006 2006-02-17 15:32:40
        - storage fix for fork() and workaround for Apache::DBI
        - made update(\%hash) work on row as well as rs
        - another fix for count with scalar group_by
        - remove dependency on Module::Find in 40resultsetmanager.t (RT #17598)

0.05005 2006-02-13 21:24:51
        - remove build dependency on version.pm

0.05004 2006-02-13 20:59:00
        - allow specification of related columns via cols attr when primary
          keys of the related table are not fetched
        - fix count for group_by as scalar
        - add horrific fix to make Oracle's retarded limit syntax work
        - remove Carp require
        - changed UUIDColumns to use new UUIDMaker classes for uuid creation
        using whatever module may be available

0.05003 2006-02-08 17:50:20
        - add component_class accessors and use them for *_class
        - small fixes to Serialize and ResultSetManager
        - rollback on disconnect, and disconnect on DESTROY

0.05002 2006-02-06 12:12:03
        - Added recommends for Class::Inspector
        - Added skip_all to t/40resultsetmanager.t if no Class::Inspector
        available

0.05001 2006-02-05 15:28:10
        - debug output now prints NULL for undef params
        - multi-step prefetch along the same rel (e.g. for trees) now works
        - added multi-join (join => [ 'foo', 'foo' ]), aliases second to foo_2
        - hack PK::Auto::Pg for "table" names referencing a schema
        - find() with attributes works
        - added experimental Serialize and ResultSetManager components
        - added code attribute recording to DBIx::Class
        - fix to find() for complex resultsets
        - added of $storage->debugcb(sub { ... })
        - added $source->resultset_attributes accessor
        - added include_columns rs attr

0.05000 2006-02-01 16:48:30
        - assorted doc fixes
        - remove ObjectCache, not yet working in 0.05
        - let many_to_many rels have attrs
        - fix ID method in PK.pm to be saner for new internals
        - fix t/30dbicplain.t to use ::Schema instead of
          Catalyst::Model::DBIC::Plain

0.04999_06 2006-01-28 21:20:32
        - fix Storage/DBI (tried to load deprecated ::Exception component)

0.04999_05 2006-01-28 20:13:52
        - count will now work for grouped resultsets
        - added accessor => option to column_info to specify accessor name
        - added $schema->populate to load test data (similar to AR fixtures)
        - removed cdbi-t dependencies, only run tests if installed
        - Removed DBIx::Class::Exception
        - unified throw_exception stuff, using Carp::Clan
        - report query when sth generation fails.
        - multi-step prefetch!
        - inheritance fixes
        - test tweaks

0.04999_04 2006-01-24 21:48:21
        - more documentation improvements
        - add columns_info_for for vendor-specific column info (Zbigniew
        Lukasiak)
        - add SQL::Translator::Producer for DBIx::Class table classes (Jess
        Robinson)
        - add unique constraint declaration (Daniel Westermann-Clark)
        - add new update_or_create method (Daniel Westermann-Clark)
        - rename ResultSetInstance class to ResultSetProxy, ResultSourceInstance
          to ResultSourceProxy, and TableInstance to ResultSourceProxy::Table
        - minor fixes to UUIDColumns
        - add debugfh method and ENV magic for tracing SQL (Nigel Metheringham)

0.04999_03 2006-01-20 06:05:27
        - imported Jess Robinson's SQL::Translator::Parser::DBIx::Class
        - lots of internals cleanup to eliminate result_source_instance
        requirement
        - added register_column and register_relationship class APIs
        - made Storage::DBI use prepare_cached safely (thanks to Tim Bunce)
        - many documentation improvements (thanks guys!)
        - added ->connection, ->connect, ->register_source and ->clone schema
        methods
        - Use croak instead of die for user errors.

0.04999_02 2006-01-14 07:17:35
        - Schema is now self-contained; no requirement for co-operation
        - add_relationship, relationships, relationship_info, has_relationship
        - relationship handling on ResultSource
        - all table handling now in Table.pm / ResultSource.pm
        - added GROUP BY and DISTINCT support
        - hacked around SQL::Abstract::Limit some more in DBIC::SQL::Abstract
          (this may have fixed complex quoting)
        - moved inflation to inflate_result in Row.pm
        - added $rs->search_related
        - split compose_namespace out of compose_connection in Schema
        - ResultSet now handles find
        - various *_related methods are now ->search_related->*
        - added new_result to ResultSet

0.04999_01 2005-12-27 03:33:42
        - search and related methods moved to ResultSet
        - select and as added to ResultSet attrs
        - added DBIx::Class::Table and TableInstance for table-per-class
        - added DBIx::Class::ResultSetInstance which handles proxying
          search etc. as a superclass of DBIx::Class::DB
        - assorted test and code cleanup work

0.04001 2005-12-13 22:00:00
        - Fix so set_inflated_column calls set_column
        - Syntax errors in relationship classes are now reported
        - Better error detection in set_primary_key and columns methods
        - Documentation improvements
        - Better transaction support with txn_* methods
        - belongs_to now works when $cond is a string
        - PK::Auto::Pg updated, only tries primary keys instead of all cols

0.04 2005-11-26
        - Moved get_simple and set_simple into AccessorGroup
        - Made 'new' die if given invalid columns
        - Added has_column and column_info to Table.pm
        - Refactored away from direct use of _columns and _primaries
        - Switched from NEXT to Class::C3

0.03004
        - Added an || '' to the CDBICompat stringify to avoid null warnings
        - Updated name section for manual pods
0.03003 2005-11-03 17:00:00
        - POD fixes.
        - Changed use to require in Relationship/Base to avoid import.

0.03002 2005-10-20 22:35:00
        - Minor bugfix to new (Row.pm)
        - Schema doesn't die if it can't load a class (Schema.pm)
        - New UUID columns plugin (UUIDColumns.pm)
        - Documentation improvements.

0.03001 2005-09-23 14:00:00
        - Fixes to relationship helpers
        - IMPORTANT: prefetch/schema combination bug fix

0.03    2005-09-19 19:35:00
        - Paging support
        - Join support on search
        - Prefetch support on search

0.02    2005-08-12 18:00:00
        - Test fixes.
        - Performance improvements.
        - Oracle primary key support.
        - MS-SQL primary key support.
        - SQL::Abstract::Limit integration for database-agnostic limiting.

0.01    2005-08-08 17:10:00
        - initial release

