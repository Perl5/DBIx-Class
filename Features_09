(Potential) Features for 0.09
=============================

Row/find caching - would be pretty useful
 - Need to have good definitions of when the cache should be queried and when invalidated
 - Be able to supply own expiry?
 - Be able to invalidate manually? Single item / entire cache / single table

Remove compose_connection / DB.pm
 - Everyone has probably forgotten what this is anyway..

Syntax improvements?
 - "as" to "alias" ?
 - "belongs_to" to "contains/refers/something"

Using inflated objects/references as values in searches
 - should deflate then run search

SQL/API feature complete?
 - UNION
 - function calls on the LHS of conditions..

Moosification - ouch

Metamodel stuff - introspection

Magically "discover" needed joins/prefetches and add them
 - eg $books->search({ 'author.name' => 'Fred'}), autoadds: join => 'author'
 - also guess aliases when supplying column names that are on joined/related tables

Storage API/restructure
 - call update/insert etc on the ResultSource, which then calls to storage
 - handle different storages/db-specific code better
 - better cross-db code .. eg LIKE/ILIKE

Relationships
 - single vs filter, discrepancies.. remove one of them and make behave the same?

Documentation - improvements
 - better indexing for finding of stuff in general
 - more cross-referencing of docs
